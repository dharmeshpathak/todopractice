{"version":3,"sources":["Card.js","Fieldf.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","style","display","textAlign","padding","className","width","backgroundColor","color","fontFamily","title","text","onClick","onSelect","id","fontWeight","Fieldf","useState","Title","setTitle","Text","setText","values","setValues","removeNote","oldvalues","filter","item","index","name","placeholder","value","onChange","e","target","trim","border","borderColor","outline","borderBottom","map","key","Footer","background","App","alignItems","justifyContent","flexDirection","position","minHeight","bottom","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2d6bd9f0.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction Card(props) {\r\n  \r\n    \r\n  \r\n  return (\r\n    <>\r\n      <div style={{ display: \"flex\", textAlign: \"center\", padding: \"20px\" }}>\r\n        <div\r\n          className=\"card shadow-lg p-3 mb-5 bg-white rounded\"\r\n          style={{ width: \"18rem\" }}\r\n        >\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li\r\n              className=\"list-group-item\"\r\n              style={{\r\n                backgroundColor: \"lightcyan\",\r\n                color: \"grey\",\r\n                fontFamily: \"Helvetica\"\r\n              }}\r\n            >\r\n              {props.title}\r\n            </li>\r\n            <li\r\n              className=\"list-group-item\"\r\n              style={{ fontFamily: \"Laila\", color: \"red\" }}\r\n            >\r\n              {\" \"}\r\n              {props.text}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <button\r\n                className=\"btn btn-light \"\r\n                style={{ color: \"red\"}}\r\n                onClick={()=>\r\n                    props.onSelect(props.id)\r\n                    }\r\n              ><span style={{fontWeight:\"bolder\"}}>\r\n                X</span>\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport Card from \"./Card\";\r\n\r\nfunction Fieldf() {\r\n  const [Title, setTitle] = useState(\"\");\r\n  const [Text, setText] = useState(\"\");\r\n  const [values, setValues] = useState([]);\r\n\r\n  const titleChange = e => {\r\n    setTitle(e.target.value.trim());\r\n  };\r\n  const textChange = e => {\r\n    setText(e.target.value.trim());\r\n  };\r\n\r\n  const summit = () => {\r\n    // console.log(Title,Text)\r\n    if (Title !== \"\" && Text !== \"\") {\r\n      setValues(oldvalues => {\r\n        return [...oldvalues, { title: Title, text: Text }];\r\n      });\r\n    }\r\n\r\n    setText(\"\");\r\n    setTitle(\"\");\r\n  };\r\n\r\n  const removeNote = id => {\r\n    // console.log(\"deleted\");\r\n    setValues(oldvalues => {\r\n      return oldvalues.filter((item, index) => {\r\n        return id !== index;\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container shadow-lg p-3 mb-5 bg-white rounded col-8 col-lg-6 col-xl-6 col-md-6 \">\r\n        <div className=\" mb-3 mt-5  d-flex justify-content-center  \">\r\n          <input\r\n            className=\" px-2 py-2 col-lg-6\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            placeholder=\"Enter title\"\r\n            value={Title}\r\n            onChange={titleChange}\r\n            style={{\r\n              border: \"none\",\r\n              backgroundColor: \"lightcyan\",\r\n              color: \"red\",\r\n              borderColor: \"transparent\",\r\n              outline: \"none\",\r\n              borderBottom: \"2px solid blue\",\r\n              fontFamily: \"georgia\"\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"  d-flex justify-content-center\">\r\n          <input\r\n            className=\" px-2 py-1  col-lg-6\"\r\n            id=\"text\"\r\n            name=\"text\"\r\n            placeholder=\"Enter note\"\r\n            value={Text}\r\n            onChange={textChange}\r\n            style={{\r\n              border: \"none\",\r\n              backgroundColor: \"lightcyan\",\r\n              color: \"red\",\r\n              borderColor: \"transparent\",\r\n              outline: \"none\",\r\n              borderBottom: \"2px solid blue\",\r\n              fontFamily: \"georgia\"\r\n            }}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-light my-3\" onClick={summit}>\r\n          Add Note\r\n        </button>\r\n      </div>\r\n      <div className=\"container d-flex justify-content-center  flex-wrap align-content-xxl-center my-5\">\r\n        {values.map((value, index) => {\r\n          return (\r\n            <Card\r\n              key={index}\r\n              id={index}\r\n              text={value.text}\r\n              title={value.title}\r\n              onSelect={removeNote}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Fieldf;\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\" container  \" style={{background:\"red\",color:\"white\"}}>\r\n        <div className =\"row d-flex \" >\r\n            <p className=\"col col-2 \"></p>\r\n            <p className =\"  col col-8 col-md-6 \" >All rights reserved|copyright@ 2020</p> \r\n            <p className =\" col \"> Made by Dharmesh Pathak </p>\r\n           \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Fieldf from \"./Fieldf\";\nimport Footer from \"./Footer\"\nfunction App() {\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        display: \"flexbox\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        position: \"relative\",\n        minHeight: \"90vh\"\n      }}\n    >\n      <h1 className=\"my-5 \" style={{ color: \"blue\",fontWeight:\"bold\",\n      fontFamily:\"georgia\" }}>\n        Todo - App\n      </h1>\n      <Fieldf />\n      <footer style={{position: \"fixed\",bottom: \"0\", width: \"100%\"}}>\n      <Footer />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}